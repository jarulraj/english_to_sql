EH Query  ::  list the suppliers
SQL Query ::  select distinct Suppliers.* from Suppliers
EH Query  ::  show the beer products
SQL Query ::  select distinct Products.* from Products where (Products.EnglishName RLIKE 'Beer.*' or Products.EnglishName RLIKE '.*[^A-Z0-9]Beer.*')
EH Query  ::  which suppliers have product managers
SQL Query ::  select distinct Suppliers.* from Suppliers where (Suppliers.ContactTitle = 'Product Manager')
EH Query  ::  show the suppliers in japan
SQL Query ::  select distinct Suppliers.* from Suppliers where (Suppliers.Country = 'Japan')
EH Query  ::  customers that work at Grizzly Peak
SQL Query ::  select distinct Customers.* from Customers where (Customers.Address RLIKE 'Grizzly Peak.*' or Customers.Address RLIKE '.*[^A-Z0-9]Grizzly Peak.*')
EH Query  ::  customers who are managers
SQL Query ::  select distinct Customers.* from Customers where (Customers.ContactTitle RLIKE 'Manager.*' or Customers.ContactTitle RLIKE '.*[^A-Z0-9]Manager.*')
EH Query  ::  which company does nancy work at?
SQL Query ::  select distinct Employees.* from Employees where (Employees.FirstName = 'Nancy')
EH Query  ::  where are the customers in canada located?
SQL Query ::  select distinct Customers.* from Customers where (Customers.Country = 'Canada')
EH Query  ::  which products come in jars
SQL Query ::  select distinct Products.* from Products where (Products.QuantityPerUnit RLIKE 'jars.*' or Products.QuantityPerUnit RLIKE '.*[^A-Z0-9]jars.*')
EH Query  ::  show the kelp products
SQL Query ::  select distinct Products.* from Products where (Products.EnglishName RLIKE 'Kelp.*' or Products.EnglishName RLIKE '.*[^A-Z0-9]Kelp.*')
EH Query  ::  Give the names of the shippers
SQL Query ::  select distinct Shippers.* from Shippers
EH Query  ::  how much does konbu cost
SQL Query ::  select distinct Products.* from Products where (Products.ProductName = 'Konbu')
EH Query  ::  list the cheese products
SQL Query ::  select distinct Products.* from Products where (Products.EnglishName RLIKE 'Cheese.*' or Products.EnglishName RLIKE '.*[^A-Z0-9]Cheese.*')
EH Query  ::  list the products in price order
SQL Query ::  select distinct Products.* from Products order by Products.UnitPrice ASC
EH Query  ::  list the orders from Janet to Japan
SQL Query ::  select distinct Orders.* from Products,Employees,Orders,Order_Details,Suppliers where (Suppliers.Country = 'Japan') and (Employees.FirstName = 'Janet') and Products.SupplierID = Suppliers.SupplierID and Order_Details.ProductID = Products.ProductID and Orders.OrderID = Order_Details.OrderID and Employees.EmployeeID = Orders.EmployeeID
EH Query  ::  suppliers who provide meat/poultry products and who are from singapore or germany
SQL Query ::  select distinct Suppliers.* from Products,Categories,Suppliers where (Suppliers.Country = 'Germany' or (Suppliers.Country = 'Singapore' or Suppliers.City = 'Singapore')) and (Categories.CategoryName = 'Meat/Poultry') and Categories.CategoryID = Products.CategoryID and Products.SupplierID = Suppliers.SupplierID
EH Query  ::  customers who ordered grandma's boysenberry spread
SQL Query ::  select distinct Customers.* from Customers,Products,Orders,Order_Details where (Products.EnglishName = 'Grandma\'s Boysenberry Spread' or Products.ProductName = 'Grandma\'s Boysenberry Spread') and Products.ProductID = Order_Details.ProductID and Customers.CustomerID = Orders.CustomerID and Orders.OrderID = Order_Details.OrderID
EH Query  ::  show the names and complete address of the biscuit suppliers
SQL Query ::  select distinct Suppliers.* from Products,Suppliers where ((Products.EnglishName RLIKE 'Biscuit.*' or Products.EnglishName RLIKE '.*[^A-Z0-9]Biscuit.*') or (Products.ProductName RLIKE 'Biscuit.*' or Products.ProductName RLIKE '.*[^A-Z0-9]Biscuit.*')) and Products.SupplierID = Suppliers.SupplierID
EH Query  ::  show the names and addresses of the pear customers
SQL Query ::  select distinct Customers.* from Customers,Products,Orders,Order_Details where ((Products.EnglishName RLIKE 'Pear.*' or Products.EnglishName RLIKE '.*[^A-Z0-9]Pear.*') or (Products.ProductName RLIKE 'Pear.*' or Products.ProductName RLIKE '.*[^A-Z0-9]Pear.*')) and Products.ProductID = Order_Details.ProductID and Customers.CustomerID = Orders.CustomerID and Orders.OrderID = Order_Details.OrderID
EH Query  ::  Suppliers in Germany or Tokyo
SQL Query ::  select distinct Suppliers.* from Suppliers where (Suppliers.Country = 'Germany') or (Suppliers.City = 'Tokyo')
EH Query  ::  show the customers in the usa
SQL Query ::  select distinct Customers.* from Customers where (Customers.Country = 'USA')
EH Query  ::  who are the german suppliers?
SQL Query ::  select distinct Suppliers.* from Suppliers
EH Query  ::  what are our australian customers?
SQL Query ::  select distinct Customers.* from Customers,Products,Orders,Order_Details,Suppliers where (Suppliers.Country = 'Australia') and Products.SupplierID = Suppliers.SupplierID and Customers.CustomerID = Orders.CustomerID and Order_Details.ProductID = Products.ProductID and Orders.OrderID = Order_Details.OrderID
EH Query  ::  give the name and id for each employee
SQL Query ::  select distinct Employees.*, Employees.EmployeeID from Employees,Orders where Orders.EmployeeID = Employees.EmployeeID and Employees.EmployeeID = Orders.EmployeeID group by Employees.EmployeeID
EH Query  ::  list the total number of customers
SQL Query ::  select distinct count(distinct Customers.CustomerID) from Customers
EH Query  ::  how many orders are there for each category
SQL Query ::  select distinct count(distinct Orders.OrderID), Categories.CategoryID from Products,Categories,Orders,Order_Details where Order_Details.ProductID = Products.ProductID and Products.CategoryID = Categories.CategoryID and Orders.OrderID = Order_Details.OrderID group by Categories.CategoryID
EH Query  ::  count the customers that have bought meat/poultry products
SQL Query ::  Error: Noun "bought" not found in database "eng2sql"</TABLE><p>
EH Query  ::  how many customers in each country have ordered chai?
SQL Query ::  select distinct count(distinct Customers.CustomerID), Customers.Country from Customers,Products,Orders,Order_Details where (Products.ProductName = 'Chai') and Products.ProductID = Order_Details.ProductID and Customers.CustomerID = Orders.CustomerID and Orders.OrderID = Order_Details.OrderID group by Customers.Country
EH Query  ::  suppliers in japan who have not ordered konbu
SQL Query ::  select distinct Suppliers.* from Suppliers where (Suppliers.Country = 'Japan') and (Suppliers.SupplierID = '1' or Suppliers.SupplierID = '10' or Suppliers.SupplierID = '11' or Suppliers.SupplierID = '12' or Suppliers.SupplierID = '13' or Suppliers.SupplierID = '14' or Suppliers.SupplierID = '15' or Suppliers.SupplierID = '16' or Suppliers.SupplierID = '17' or Suppliers.SupplierID = '18' or Suppliers.SupplierID = '19' or Suppliers.SupplierID = '2' or Suppliers.SupplierID = '20' or Suppliers.SupplierID = '21' or Suppliers.SupplierID = '22' or Suppliers.SupplierID = '23' or Suppliers.SupplierID = '24' or Suppliers.SupplierID = '25' or Suppliers.SupplierID = '26' or Suppliers.SupplierID = '27' or Suppliers.SupplierID = '28' or Suppliers.SupplierID = '29' or Suppliers.SupplierID = '3' or Suppliers.SupplierID = '4' or Suppliers.SupplierID = '5' or Suppliers.SupplierID = '7' or Suppliers.SupplierID = '8' or Suppliers.SupplierID = '9')
EH Query  ::  employees whose first names start with "N"
SQL Query ::  select distinct Employees.* from Employees where (Employees.FirstName REGEXP '^N')
EH Query  ::  which customers only used united package
SQL Query ::  select distinct Customers.* from Customers,Orders,Shippers where (Shippers.ShipperID = Orders.ShipVia and Orders.CustomerID = Customers.CustomerID)  group by Customers.CustomerID having sum(IF(not(Shippers.CompanyName = 'United Package'),1,0)) = 0 and sum(IF((Shippers.CompanyName = 'United Package'),1,0))!=0
EH Query  ::  which customers exclusively use united package
SQL Query ::  select distinct Customers.* from Customers,Orders,Shippers where (Shippers.ShipperID = Orders.ShipVia and Orders.CustomerID = Customers.CustomerID)  group by Customers.CustomerID having sum(IF(not(Shippers.CompanyName = 'United Package'),1,0)) = 0 and sum(IF((Shippers.CompanyName = 'United Package'),1,0))!=0
EH Query  ::  which customers use United Package only
SQL Query ::  select distinct Customers.* from Customers,Orders,Shippers where (Shippers.ShipperID = Orders.ShipVia and Orders.CustomerID = Customers.CustomerID)  group by Customers.CustomerID having sum(IF(not(Shippers.CompanyName = 'United Package'),1,0)) = 0 and sum(IF((Shippers.CompanyName = 'United Package'),1,0))!=0
EH Query  ::  list the customers in alphabetical order
SQL Query ::  select distinct Customers.* from Customers order by Customers.CustomerID ASC
EH Query  ::  customers that ordered both konbu and tofu
SQL Query ::  select distinct Customers.* from Customers where (Customers.CustomerID = 'QUEDE' or Customers.CustomerID = 'KOENE' or Customers.CustomerID = 'OTTIK' or Customers.CustomerID = 'BERGS' or Customers.CustomerID = 'WARTH' or Customers.CustomerID = 'ERNSH' or Customers.CustomerID = 'BONAP' or Customers.CustomerID = 'SAVEA' or Customers.CustomerID = 'OCEAN' or Customers.CustomerID = 'ANATR' or Customers.CustomerID = 'HUNGC' or Customers.CustomerID = 'RATTC')
EH Query  ::  customers that ordered from ma maison but not tokyo traders
SQL Query ::  select distinct Customers.* from Customers where (Customers.CustomerID = 'SEVES' or Customers.CustomerID = 'CHOPS' or Customers.CustomerID = 'FURIB' or Customers.CustomerID = 'VAFFE' or Customers.CustomerID = 'BLONP' or Customers.CustomerID = 'LILAS' or Customers.CustomerID = 'WOLZA' or Customers.CustomerID = 'SUPRD' or Customers.CustomerID = 'BERGS' or Customers.CustomerID = 'WARTH' or Customers.CustomerID = 'HILAA' or Customers.CustomerID = 'SAVEA' or Customers.CustomerID = 'BOTTM' or Customers.CustomerID = 'TORTU' or Customers.CustomerID = 'RATTC' or Customers.CustomerID = 'GODOS' or Customers.CustomerID = 'VICTE' or Customers.CustomerID = 'WHITC' or Customers.CustomerID = 'ERNSH' or Customers.CustomerID = 'BONAP' or Customers.CustomerID = 'QUICK')
EH Query  ::  which customers ordered both chai and konbu
SQL Query ::  select distinct Customers.* from Customers where (Customers.CustomerID = 'LAMAI' or Customers.CustomerID = 'CHOPS' or Customers.CustomerID = 'WELLI' or Customers.CustomerID = 'BERGS' or Customers.CustomerID = 'WARTH' or Customers.CustomerID = 'HILAA' or Customers.CustomerID = 'SAVEA' or Customers.CustomerID = 'TORTU' or Customers.CustomerID = 'RATTC' or Customers.CustomerID = 'QUICK')
EH Query  ::  which customers in germany have purchased tofu but not chai
SQL Query ::  select distinct Customers.* from Customers where (Customers.Country = 'Germany') and not(Customers.CustomerID = 'BERGS' or Customers.CustomerID = 'WARTH' or Customers.CustomerID = 'HUNGO' or Customers.CustomerID = 'SAVEA' or Customers.CustomerID = 'PERIC' or Customers.CustomerID = 'GREAL' or Customers.CustomerID = 'RATTC')
EH Query  ::  which seafood orders did not go to canada?
SQL Query ::  select distinct Orders.* from Products,Categories,Orders,Order_Details where (Categories.CategoryName = 'Seafood') and (Orders.OrderID = '10248' or Orders.OrderID = '10249' or Orders.OrderID = '10250' or Orders.OrderID = '10251' or Orders.OrderID = '10252' or Orders.OrderID = '10253' or Orders.OrderID = '10254' or Orders.OrderID = '10255' or Orders.OrderID = '10256' or Orders.OrderID = '10257' or Orders.OrderID = '10258' or Orders.OrderID = '10259' or Orders.OrderID = '10260' or Orders.OrderID = '10261' or Orders.OrderID = '10262' or Orders.OrderID = '10263' or Orders.OrderID = '10264' or Orders.OrderID = '10265' or Orders.OrderID = '10266' or Orders.OrderID = '10267' or Orders.OrderID = '10268' or Orders.OrderID = '10269' or Orders.OrderID = '10270' or Orders.OrderID = '10271' or Orders.OrderID = '10272' or Orders.OrderID = '10273' or Orders.OrderID = '10274' or Orders.OrderID = '10275' or Orders.OrderID = '10276' or Orders.OrderID = '10277' or Orders.OrderID = '10278' or Orders.OrderID = '10279' or Orders.OrderID = '10280' or Orders.OrderID = '10281' or Orders.OrderID = '10282' or Orders.OrderID = '10283' or Orders.OrderID = '10284' or Orders.OrderID = '10285' or Orders.OrderID = '10286' or Orders.OrderID = '10287' or Orders.OrderID = '10288' or Orders.OrderID = '10289' or Orders.OrderID = '10290' or Orders.OrderID = '10291' or Orders.OrderID = '10292' or Orders.OrderID = '10293' or Orders.OrderID = '10294' or Orders.OrderID = '10295' or Orders.OrderID = '10296' or Orders.OrderID = '10297' or Orders.OrderID = '10298' or Orders.OrderID = '10299' or Orders.OrderID = '10300' or Orders.OrderID = '10301' or Orders.OrderID = '10302' or Orders.OrderID = '10303' or Orders.OrderID = '10304' or Orders.OrderID = '10305' or Orders.OrderID = '10306' or Orders.OrderID = '10307' or Orders.OrderID = '10308' or Orders.OrderID = '10309' or Orders.OrderID = '10310' or Orders.OrderID = '10311' or Orders.OrderID = '10312' or Orders.OrderID = '10313' or Orders.OrderID = '10314' or Orders.OrderID = '10315' or Orders.OrderID = '10316' or Orders.OrderID = '10317' or Orders.OrderID = '10318' or Orders.OrderID = '10319' or Orders.OrderID = '10320' or Orders.OrderID = '10321' or Orders.OrderID = '10322' or Orders.OrderID = '10323' or Orders.OrderID = '10324' or Orders.OrderID = '10325' or Orders.OrderID = '10326' or Orders.OrderID = '10327' or Orders.OrderID = '10328' or Orders.OrderID = '10329' or Orders.OrderID = '10330' or Orders.OrderID = '10331' or Orders.OrderID = '10333' or Orders.OrderID = '10334' or Orders.OrderID = '10335' or Orders.OrderID = '10336' or Orders.OrderID = '10337' or Orders.OrderID = '10338' or Orders.OrderID = '10340' or Orders.OrderID = '10341' or Orders.OrderID = '10342' or Orders.OrderID = '10343' or Orders.OrderID = '10344' or Orders.OrderID = '10345' or Orders.OrderID = '10346' or Orders.OrderID = '10347' or Orders.OrderID = '10348' or Orders.OrderID = '10349' or Orders.OrderID = '10350' or Orders.OrderID = '10351' or Orders.OrderID = '10352' or Orders.OrderID = '10353' or Orders.OrderID = '10354' or Orders.OrderID = '10355' or Orders.OrderID = '10356' or Orders.OrderID = '10357' or Orders.OrderID = '10358' or Orders.OrderID = '10359' or Orders.OrderID = '10360' or Orders.OrderID = '10361' or Orders.OrderID = '10362' or Orders.OrderID = '10363' or Orders.OrderID = '10364' or Orders.OrderID = '10365' or Orders.OrderID = '10366' or Orders.OrderID = '10367' or Orders.OrderID = '10368' or Orders.OrderID = '10369' or Orders.OrderID = '10370' or Orders.OrderID = '10371' or Orders.OrderID = '10372' or Orders.OrderID = '10373' or Orders.OrderID = '10374' or Orders.OrderID = '10375' or Orders.OrderID = '10377' or Orders.OrderID = '10378' or Orders.OrderID = '10379' or Orders.OrderID = '10380' or Orders.OrderID = '10381' or Orders.OrderID = '10382' or Orders.OrderID = '10383' or Orders.OrderID = '10384' or Orders.OrderID = '10385' or Orders.OrderID = '10386' or Orders.OrderID = '10387' or Orders.OrderID = '10388' or Orders.OrderID = '10390' or Orders.OrderID = '10391' or Orders.OrderID = '10392' or Orders.OrderID = '10393' or Orders.OrderID = '10394' or Orders.OrderID = '10395' or Orders.OrderID = '10396' or Orders.OrderID = '10397' or Orders.OrderID = '10398' or Orders.OrderID = '10399' or Orders.OrderID = '10400' or Orders.OrderID = '10401' or Orders.OrderID = '10402' or Orders.OrderID = '10403' or Orders.OrderID = '10404' or Orders.OrderID = '10405' or Orders.OrderID = '10406' or Orders.OrderID = '10407' or Orders.OrderID = '10408' or Orders.OrderID = '10409' or Orders.OrderID = '10412' or Orders.OrderID = '10413' or Orders.OrderID = '10414' or Orders.OrderID = '10415' or Orders.OrderID = '10416' or Orders.OrderID = '10417' or Orders.OrderID = '10418' or Orders.OrderID = '10419' or Orders.OrderID = '10420' or Orders.OrderID = '10421' or Orders.OrderID = '10422' or Orders.OrderID = '10423' or Orders.OrderID = '10425' or Orders.OrderID = '10426' or Orders.OrderID = '10427' or Orders.OrderID = '10428' or Orders.OrderID = '10429' or Orders.OrderID = '10430' or Orders.OrderID = '10432' or Orders.OrderID = '10433' or Orders.OrderID = '10434' or Orders.OrderID = '10435' or Orders.OrderID = '10436' or Orders.OrderID = '10437' or Orders.OrderID = '10438' or Orders.OrderID = '10440' or Orders.OrderID = '10441' or Orders.OrderID = '10442' or Orders.OrderID = '10443' or Orders.OrderID = '10444' or Orders.OrderID = '10445' or Orders.OrderID = '10446' or Orders.OrderID = '10447' or Orders.OrderID = '10448' or Orders.OrderID = '10449' or Orders.OrderID = '10450' or Orders.OrderID = '10451' or Orders.OrderID = '10452' or Orders.OrderID = '10453' or Orders.OrderID = '10454' or Orders.OrderID = '10455' or Orders.OrderID = '10456' or Orders.OrderID = '10457' or Orders.OrderID = '10458' or Orders.OrderID = '10459' or Orders.OrderID = '10460' or Orders.OrderID = '10461' or Orders.OrderID = '10462' or Orders.OrderID = '10463' or Orders.OrderID = '10464' or Orders.OrderID = '10465' or Orders.OrderID = '10466' or Orders.OrderID = '10467' or Orders.OrderID = '10468' or Orders.OrderID = '10469' or Orders.OrderID = '10470' or Orders.OrderID = '10471' or Orders.OrderID = '10472' or Orders.OrderID = '10473' or Orders.OrderID = '10474' or Orders.OrderID = '10475' or Orders.OrderID = '10476' or Orders.OrderID = '10477' or Orders.OrderID = '10478' or Orders.OrderID = '10479' or Orders.OrderID = '10480' or Orders.OrderID = '10481' or Orders.OrderID = '10482' or Orders.OrderID = '10483' or Orders.OrderID = '10484' or Orders.OrderID = '10485' or Orders.OrderID = '10486' or Orders.OrderID = '10487' or Orders.OrderID = '10488' or Orders.OrderID = '10489' or Orders.OrderID = '10490' or Orders.OrderID = '10491' or Orders.OrderID = '10493' or Orders.OrderID = '10494' or Orders.OrderID = '10496' or Orders.OrderID = '10497' or Orders.OrderID = '10498' or Orders.OrderID = '10499' or Orders.OrderID = '10500' or Orders.OrderID = '10501' or Orders.OrderID = '10502' or Orders.OrderID = '10503' or Orders.OrderID = '10504' or Orders.OrderID = '10506' or Orders.OrderID = '10507' or Orders.OrderID = '10508' or Orders.OrderID = '10509' or Orders.OrderID = '10510' or Orders.OrderID = '10511' or Orders.OrderID = '10512' or Orders.OrderID = '10513' or Orders.OrderID = '10514' or Orders.OrderID = '10515' or Orders.OrderID = '10516' or Orders.OrderID = '10517' or Orders.OrderID = '10518' or Orders.OrderID = '10519' or Orders.OrderID = '10520' or Orders.OrderID = '10521' or Orders.OrderID = '10522' or Orders.OrderID = '10523' or Orders.OrderID = '10524' or Orders.OrderID = '10525' or Orders.OrderID = '10526' or Orders.OrderID = '10527' or Orders.OrderID = '10528' or Orders.OrderID = '10529' or Orders.OrderID = '10530' or Orders.OrderID = '10531' or Orders.OrderID = '10532' or Orders.OrderID = '10533' or Orders.OrderID = '10534' or Orders.OrderID = '10535' or Orders.OrderID = '10536' or Orders.OrderID = '10537' or Orders.OrderID = '10538' or Orders.OrderID = '10539' or Orders.OrderID = '10540' or Orders.OrderID = '10541' or Orders.OrderID = '10542' or Orders.OrderID = '10543' or Orders.OrderID = '10544' or Orders.OrderID = '10545' or Orders.OrderID = '10546' or Orders.OrderID = '10547' or Orders.OrderID = '10548' or Orders.OrderID = '10549' or Orders.OrderID = '10550' or Orders.OrderID = '10551' or Orders.OrderID = '10552' or Orders.OrderID = '10553' or Orders.OrderID = '10554' or Orders.OrderID = '10555' or Orders.OrderID = '10556' or Orders.OrderID = '10557' or Orders.OrderID = '10558' or Orders.OrderID = '10559' or Orders.OrderID = '10560' or Orders.OrderID = '10561' or Orders.OrderID = '10562' or Orders.OrderID = '10563' or Orders.OrderID = '10564' or Orders.OrderID = '10566' or Orders.OrderID = '10567' or Orders.OrderID = '10568' or Orders.OrderID = '10569' or Orders.OrderID = '10571' or Orders.OrderID = '10572' or Orders.OrderID = '10573' or Orders.OrderID = '10574' or Orders.OrderID = '10575' or Orders.OrderID = '10576' or Orders.OrderID = '10577' or Orders.OrderID = '10578' or Orders.OrderID = '10579' or Orders.OrderID = '10580' or Orders.OrderID = '10581' or Orders.OrderID = '10582' or Orders.OrderID = '10583' or Orders.OrderID = '10584' or Orders.OrderID = '10585' or Orders.OrderID = '10586' or Orders.OrderID = '10587' or Orders.OrderID = '10588' or Orders.OrderID = '10589' or Orders.OrderID = '10591' or Orders.OrderID = '10592' or Orders.OrderID = '10593' or Orders.OrderID = '10594' or Orders.OrderID = '10595' or Orders.OrderID = '10596' or Orders.OrderID = '10597' or Orders.OrderID = '10598' or Orders.OrderID = '10599' or Orders.OrderID = '10600' or Orders.OrderID = '10601' or Orders.OrderID = '10602' or Orders.OrderID = '10603' or Orders.OrderID = '10604' or Orders.OrderID = '10606' or Orders.OrderID = '10607' or Orders.OrderID = '10608' or Orders.OrderID = '10609' or Orders.OrderID = '10610' or Orders.OrderID = '10611' or Orders.OrderID = '10612' or Orders.OrderID = '10613' or Orders.OrderID = '10614' or Orders.OrderID = '10615' or Orders.OrderID = '10616' or Orders.OrderID = '10617' or Orders.OrderID = '10621' or Orders.OrderID = '10622' or Orders.OrderID = '10623' or Orders.OrderID = '10624' or Orders.OrderID = '10625' or Orders.OrderID = '10626' or Orders.OrderID = '10627' or Orders.OrderID = '10628' or Orders.OrderID = '10629' or Orders.OrderID = '10630' or Orders.OrderID = '10631' or Orders.OrderID = '10632' or Orders.OrderID = '10633' or Orders.OrderID = '10634' or Orders.OrderID = '10635' or Orders.OrderID = '10636' or Orders.OrderID = '10637' or Orders.OrderID = '10638' or Orders.OrderID = '10639' or Orders.OrderID = '10640' or Orders.OrderID = '10641' or Orders.OrderID = '10642' or Orders.OrderID = '10643' or Orders.OrderID = '10644' or Orders.OrderID = '10645' or Orders.OrderID = '10646' or Orders.OrderID = '10647' or Orders.OrderID = '10648' or Orders.OrderID = '10649' or Orders.OrderID = '10650' or Orders.OrderID = '10651' or Orders.OrderID = '10652' or Orders.OrderID = '10653' or Orders.OrderID = '10654' or Orders.OrderID = '10655' or Orders.OrderID = '10656' or Orders.OrderID = '10657' or Orders.OrderID = '10658' or Orders.OrderID = '10659' or Orders.OrderID = '10660' or Orders.OrderID = '10661' or Orders.OrderID = '10662' or Orders.OrderID = '10663' or Orders.OrderID = '10664' or Orders.OrderID = '10665' or Orders.OrderID = '10666' or Orders.OrderID = '10667' or Orders.OrderID = '10668' or Orders.OrderID = '10669' or Orders.OrderID = '10670' or Orders.OrderID = '10671' or Orders.OrderID = '10672' or Orders.OrderID = '10673' or Orders.OrderID = '10674' or Orders.OrderID = '10675' or Orders.OrderID = '10676' or Orders.OrderID = '10677' or Orders.OrderID = '10678' or Orders.OrderID = '10679' or Orders.OrderID = '10680' or Orders.OrderID = '10681' or Orders.OrderID = '10682' or Orders.OrderID = '10683' or Orders.OrderID = '10684' or Orders.OrderID = '10685' or Orders.OrderID = '10686' or Orders.OrderID = '10687' or Orders.OrderID = '10688' or Orders.OrderID = '10689' or Orders.OrderID = '10690' or Orders.OrderID = '10691' or Orders.OrderID = '10692' or Orders.OrderID = '10693' or Orders.OrderID = '10694' or Orders.OrderID = '10695' or Orders.OrderID = '10696' or Orders.OrderID = '10697' or Orders.OrderID = '10698' or Orders.OrderID = '10699' or Orders.OrderID = '10700' or Orders.OrderID = '10701' or Orders.OrderID = '10702' or Orders.OrderID = '10703' or Orders.OrderID = '10704' or Orders.OrderID = '10705' or Orders.OrderID = '10706' or Orders.OrderID = '10707' or Orders.OrderID = '10708' or Orders.OrderID = '10709' or Orders.OrderID = '10710' or Orders.OrderID = '10711' or Orders.OrderID = '10712' or Orders.OrderID = '10713' or Orders.OrderID = '10714' or Orders.OrderID = '10715' or Orders.OrderID = '10716' or Orders.OrderID = '10717' or Orders.OrderID = '10718' or Orders.OrderID = '10719' or Orders.OrderID = '10720' or Orders.OrderID = '10721' or Orders.OrderID = '10722' or Orders.OrderID = '10723' or Orders.OrderID = '10725' or Orders.OrderID = '10726' or Orders.OrderID = '10727' or Orders.OrderID = '10728' or Orders.OrderID = '10729' or Orders.OrderID = '10730' or Orders.OrderID = '10731' or Orders.OrderID = '10732' or Orders.OrderID = '10733' or Orders.OrderID = '10734' or Orders.OrderID = '10735' or Orders.OrderID = '10736' or Orders.OrderID = '10737' or Orders.OrderID = '10738' or Orders.OrderID = '10739' or Orders.OrderID = '10740' or Orders.OrderID = '10741' or Orders.OrderID = '10743' or Orders.OrderID = '10744' or Orders.OrderID = '10745' or Orders.OrderID = '10746' or Orders.OrderID = '10747' or Orders.OrderID = '10748' or Orders.OrderID = '10749' or Orders.OrderID = '10750' or Orders.OrderID = '10751' or Orders.OrderID = '10752' or Orders.OrderID = '10753' or Orders.OrderID = '10754' or Orders.OrderID = '10755' or Orders.OrderID = '10756' or Orders.OrderID = '10757' or Orders.OrderID = '10758' or Orders.OrderID = '10759' or Orders.OrderID = '10760' or Orders.OrderID = '10761' or Orders.OrderID = '10762' or Orders.OrderID = '10763' or Orders.OrderID = '10764' or Orders.OrderID = '10765' or Orders.OrderID = '10766' or Orders.OrderID = '10767' or Orders.OrderID = '10768' or Orders.OrderID = '10769' or Orders.OrderID = '10770' or Orders.OrderID = '10771' or Orders.OrderID = '10772' or Orders.OrderID = '10773' or Orders.OrderID = '10774' or Orders.OrderID = '10775' or Orders.OrderID = '10776' or Orders.OrderID = '10777' or Orders.OrderID = '10778' or Orders.OrderID = '10779' or Orders.OrderID = '10780' or Orders.OrderID = '10781' or Orders.OrderID = '10782' or Orders.OrderID = '10783' or Orders.OrderID = '10784' or Orders.OrderID = '10785' or Orders.OrderID = '10786' or Orders.OrderID = '10787' or Orders.OrderID = '10788' or Orders.OrderID = '10789' or Orders.OrderID = '10790' or Orders.OrderID = '10791' or Orders.OrderID = '10792' or Orders.OrderID = '10793' or Orders.OrderID = '10794' or Orders.OrderID = '10795' or Orders.OrderID = '10796' or Orders.OrderID = '10797' or Orders.OrderID = '10798' or Orders.OrderID = '10799' or Orders.OrderID = '10800' or Orders.OrderID = '10801' or Orders.OrderID = '10802' or Orders.OrderID = '10803' or Orders.OrderID = '10804' or Orders.OrderID = '10805' or Orders.OrderID = '10806' or Orders.OrderID = '10807' or Orders.OrderID = '10808' or Orders.OrderID = '10809' or Orders.OrderID = '10811' or Orders.OrderID = '10812' or Orders.OrderID = '10813' or Orders.OrderID = '10814' or Orders.OrderID = '10815' or Orders.OrderID = '10816' or Orders.OrderID = '10817' or Orders.OrderID = '10818' or Orders.OrderID = '10819' or Orders.OrderID = '10820' or Orders.OrderID = '10821' or Orders.OrderID = '10822' or Orders.OrderID = '10823' or Orders.OrderID = '10824' or Orders.OrderID = '10825' or Orders.OrderID = '10826' or Orders.OrderID = '10827' or Orders.OrderID = '10828' or Orders.OrderID = '10829' or Orders.OrderID = '10830' or Orders.OrderID = '10831' or Orders.OrderID = '10832' or Orders.OrderID = '10833' or Orders.OrderID = '10834' or Orders.OrderID = '10835' or Orders.OrderID = '10836' or Orders.OrderID = '10837' or Orders.OrderID = '10838' or Orders.OrderID = '10839' or Orders.OrderID = '10840' or Orders.OrderID = '10841' or Orders.OrderID = '10842' or Orders.OrderID = '10843' or Orders.OrderID = '10844' or Orders.OrderID = '10845' or Orders.OrderID = '10846' or Orders.OrderID = '10847' or Orders.OrderID = '10848' or Orders.OrderID = '10849' or Orders.OrderID = '10850' or Orders.OrderID = '10851' or Orders.OrderID = '10852' or Orders.OrderID = '10853' or Orders.OrderID = '10854' or Orders.OrderID = '10855' or Orders.OrderID = '10856' or Orders.OrderID = '10857' or Orders.OrderID = '10858' or Orders.OrderID = '10859' or Orders.OrderID = '10860' or Orders.OrderID = '10861' or Orders.OrderID = '10862' or Orders.OrderID = '10863' or Orders.OrderID = '10864' or Orders.OrderID = '10865' or Orders.OrderID = '10866' or Orders.OrderID = '10867' or Orders.OrderID = '10868' or Orders.OrderID = '10869' or Orders.OrderID = '10870' or Orders.OrderID = '10871' or Orders.OrderID = '10872' or Orders.OrderID = '10873' or Orders.OrderID = '10874' or Orders.OrderID = '10875' or Orders.OrderID = '10876' or Orders.OrderID = '10877' or Orders.OrderID = '10878' or Orders.OrderID = '10879' or Orders.OrderID = '10880' or Orders.OrderID = '10881' or Orders.OrderID = '10882' or Orders.OrderID = '10883' or Orders.OrderID = '10884' or Orders.OrderID = '10885' or Orders.OrderID = '10886' or Orders.OrderID = '10887' or Orders.OrderID = '10888' or Orders.OrderID = '10889' or Orders.OrderID = '10890' or Orders.OrderID = '10891' or Orders.OrderID = '10892' or Orders.OrderID = '10893' or Orders.OrderID = '10894' or Orders.OrderID = '10895' or Orders.OrderID = '10896' or Orders.OrderID = '10897' or Orders.OrderID = '10898' or Orders.OrderID = '10899' or Orders.OrderID = '10900' or Orders.OrderID = '10901' or Orders.OrderID = '10902' or Orders.OrderID = '10903' or Orders.OrderID = '10904' or Orders.OrderID = '10905' or Orders.OrderID = '10906' or Orders.OrderID = '10907' or Orders.OrderID = '10908' or Orders.OrderID = '10909' or Orders.OrderID = '10910' or Orders.OrderID = '10911' or Orders.OrderID = '10912' or Orders.OrderID = '10913' or Orders.OrderID = '10914' or Orders.OrderID = '10915' or Orders.OrderID = '10916' or Orders.OrderID = '10917' or Orders.OrderID = '10919' or Orders.OrderID = '10920' or Orders.OrderID = '10921' or Orders.OrderID = '10922' or Orders.OrderID = '10923' or Orders.OrderID = '10924' or Orders.OrderID = '10925' or Orders.OrderID = '10926' or Orders.OrderID = '10927' or Orders.OrderID = '10928' or Orders.OrderID = '10929' or Orders.OrderID = '10930' or Orders.OrderID = '10931' or Orders.OrderID = '10932' or Orders.OrderID = '10933' or Orders.OrderID = '10934' or Orders.OrderID = '10935' or Orders.OrderID = '10936' or Orders.OrderID = '10937' or Orders.OrderID = '10938' or Orders.OrderID = '10939' or Orders.OrderID = '10940' or Orders.OrderID = '10941' or Orders.OrderID = '10942' or Orders.OrderID = '10943' or Orders.OrderID = '10945' or Orders.OrderID = '10946' or Orders.OrderID = '10947' or Orders.OrderID = '10948' or Orders.OrderID = '10950' or Orders.OrderID = '10951' or Orders.OrderID = '10952' or Orders.OrderID = '10953' or Orders.OrderID = '10954' or Orders.OrderID = '10955' or Orders.OrderID = '10956' or Orders.OrderID = '10957' or Orders.OrderID = '10958' or Orders.OrderID = '10959' or Orders.OrderID = '10960' or Orders.OrderID = '10961' or Orders.OrderID = '10962' or Orders.OrderID = '10963' or Orders.OrderID = '10964' or Orders.OrderID = '10965' or Orders.OrderID = '10966' or Orders.OrderID = '10967' or Orders.OrderID = '10968' or Orders.OrderID = '10969' or Orders.OrderID = '10970' or Orders.OrderID = '10971' or Orders.OrderID = '10972' or Orders.OrderID = '10973' or Orders.OrderID = '10974' or Orders.OrderID = '10976' or Orders.OrderID = '10977' or Orders.OrderID = '10978' or Orders.OrderID = '10979' or Orders.OrderID = '10980' or Orders.OrderID = '10981' or Orders.OrderID = '10983' or Orders.OrderID = '10984' or Orders.OrderID = '10985' or Orders.OrderID = '10986' or Orders.OrderID = '10987' or Orders.OrderID = '10988' or Orders.OrderID = '10989' or Orders.OrderID = '10990' or Orders.OrderID = '10991' or Orders.OrderID = '10992' or Orders.OrderID = '10993' or Orders.OrderID = '10994' or Orders.OrderID = '10995' or Orders.OrderID = '10996' or Orders.OrderID = '10997' or Orders.OrderID = '10998' or Orders.OrderID = '10999' or Orders.OrderID = '11000' or Orders.OrderID = '11001' or Orders.OrderID = '11002' or Orders.OrderID = '11003' or Orders.OrderID = '11004' or Orders.OrderID = '11005' or Orders.OrderID = '11006' or Orders.OrderID = '11007' or Orders.OrderID = '11008' or Orders.OrderID = '11009' or Orders.OrderID = '11010' or Orders.OrderID = '11011' or Orders.OrderID = '11012' or Orders.OrderID = '11013' or Orders.OrderID = '11014' or Orders.OrderID = '11015' or Orders.OrderID = '11016' or Orders.OrderID = '11017' or Orders.OrderID = '11018' or Orders.OrderID = '11019' or Orders.OrderID = '11020' or Orders.OrderID = '11021' or Orders.OrderID = '11022' or Orders.OrderID = '11023' or Orders.OrderID = '11024' or Orders.OrderID = '11025' or Orders.OrderID = '11026' or Orders.OrderID = '11028' or Orders.OrderID = '11029' or Orders.OrderID = '11030' or Orders.OrderID = '11031' or Orders.OrderID = '11032' or Orders.OrderID = '11033' or Orders.OrderID = '11034' or Orders.OrderID = '11035' or Orders.OrderID = '11036' or Orders.OrderID = '11037' or Orders.OrderID = '11038' or Orders.OrderID = '11039' or Orders.OrderID = '11040' or Orders.OrderID = '11041' or Orders.OrderID = '11042' or Orders.OrderID = '11043' or Orders.OrderID = '11044' or Orders.OrderID = '11046' or Orders.OrderID = '11047' or Orders.OrderID = '11049' or Orders.OrderID = '11050' or Orders.OrderID = '11051' or Orders.OrderID = '11052' or Orders.OrderID = '11053' or Orders.OrderID = '11054' or Orders.OrderID = '11055' or Orders.OrderID = '11056' or Orders.OrderID = '11057' or Orders.OrderID = '11058' or Orders.OrderID = '11059' or Orders.OrderID = '11060' or Orders.OrderID = '11061' or Orders.OrderID = '11062' or Orders.OrderID = '11063' or Orders.OrderID = '11064' or Orders.OrderID = '11065' or Orders.OrderID = '11066' or Orders.OrderID = '11067' or Orders.OrderID = '11068' or Orders.OrderID = '11069' or Orders.OrderID = '11070' or Orders.OrderID = '11071' or Orders.OrderID = '11072' or Orders.OrderID = '11073' or Orders.OrderID = '11074' or Orders.OrderID = '11075' or Orders.OrderID = '11076' or Orders.OrderID = '11077') and Products.ProductID = Order_Details.ProductID and Categories.CategoryID = Products.CategoryID and Orders.OrderID = Order_Details.OrderID
EH Query  ::  which customers never ordered meat/poultry
SQL Query ::  select distinct Customers.* from Customers where (Customers.CustomerID = 'ALFKI' or Customers.CustomerID = 'ANATR' or Customers.CustomerID = 'BSBEV' or Customers.CustomerID = 'CACTU' or Customers.CustomerID = 'CENTC' or Customers.CustomerID = 'FISSA' or Customers.CustomerID = 'FRANS' or Customers.CustomerID = 'GALED' or Customers.CustomerID = 'GOURL' or Customers.CustomerID = 'LAUGB' or Customers.CustomerID = 'LAZYK' or Customers.CustomerID = 'MAGAA' or Customers.CustomerID = 'MORGK' or Customers.CustomerID = 'NORTS' or Customers.CustomerID = 'OCEAN' or Customers.CustomerID = 'PARIS' or Customers.CustomerID = 'RANCH' or Customers.CustomerID = 'SPECD' or Customers.CustomerID = 'THEBI' or Customers.CustomerID = 'TOMSP' or Customers.CustomerID = 'TRAIH' or Customers.CustomerID = 'VINET')
EH Query  ::  customers who have ordered every seafood product
SQL Query ::  select distinct Customers.* from Customers,Products,Categories,Orders,Order_Details where (Categories.CategoryName = 'Seafood') and Products.ProductID = Order_Details.ProductID and Categories.CategoryID = Products.CategoryID and Customers.CustomerID = Orders.CustomerID and Orders.OrderID = Order_Details.OrderID and (1 = 0)
EH Query  ::  how many customers have ordered every seafood product
SQL Query ::  select distinct count(distinct Customers.CustomerID) from Customers,Products,Categories,Orders,Order_Details where (Categories.CategoryName = 'Seafood') and Products.ProductID = Order_Details.ProductID and Categories.CategoryID = Products.CategoryID and Customers.CustomerID = Orders.CustomerID and Orders.OrderID = Order_Details.OrderID and (1 = 0)
EH Query  ::  which suppliers supply products from every category
SQL Query ::  select distinct Suppliers.*,Products.ProductID,Categories.CategoryID from Products,Categories,Suppliers where (1 = 0)  and Suppliers.SupplierID = Products.SupplierID and Products.CategoryID = Categories.CategoryID
EH Query  ::  what is the average unit price of all the products
SQL Query ::  select distinct avg(Products.UnitPrice) from Products
EH Query  ::  the maximum price of the products
SQL Query ::  select distinct max(Products.UnitPrice) from Products
EH Query  ::  which orders were neither shipped to japan nor for tofu
SQL Query ::  Error: Noun "shipped" not found in database "eng2sql"</TABLE><p>
EH Query  ::  which orders were not both shipped to japan and sent via Federal Shipping
SQL Query ::  Error: Noun "shipped" not found in database "eng2sql"</TABLE><p>
EH Query  ::  Records for Customers who are located in Germany and whose names begin with A-R.
SQL Query ::  select distinct Customers.* from Customers where (Customers.Country = 'Germany') and (Customers.CompanyName REGEXP '^[A-R]' or Customers.ContactName REGEXP '^[A-R]')
EH Query  ::  Employees whose first names start with the letter N.
SQL Query ::  select distinct Employees.* from Employees where (Employees.FirstName REGEXP '^N')
EH Query  ::  Products with names that start with "C".
SQL Query ::  select distinct Products.* from Products where (Products.EnglishName REGEXP '^C' or Products.ProductName REGEXP '^C')
EH Query  ::  find the number of customers in japan or germany, and group them by country
SQL Query ::  Warning:  'Germany' does not exist in Customers.Country</TABLE><p>
EH Query  ::  find the total number of customers not in canada, and group them by country
SQL Query ::  select distinct count(distinct Customers.CustomerID),Customers.Country from Customers where (Customers.CustomerID = 'ALFKI' or Customers.CustomerID = 'ANATR' or Customers.CustomerID = 'ANTON' or Customers.CustomerID = 'AROUT' or Customers.CustomerID = 'BERGS' or Customers.CustomerID = 'BLAUS' or Customers.CustomerID = 'BLONP' or Customers.CustomerID = 'BOLID' or Customers.CustomerID = 'BONAP' or Customers.CustomerID = 'BSBEV' or Customers.CustomerID = 'CACTU' or Customers.CustomerID = 'CENTC' or Customers.CustomerID = 'CHOPS' or Customers.CustomerID = 'COMMI' or Customers.CustomerID = 'CONSH' or Customers.CustomerID = 'DRACD' or Customers.CustomerID = 'DUMON' or Customers.CustomerID = 'EASTC' or Customers.CustomerID = 'ERNSH' or Customers.CustomerID = 'FAMIA' or Customers.CustomerID = 'FISSA' or Customers.CustomerID = 'FOLIG' or Customers.CustomerID = 'FOLKO' or Customers.CustomerID = 'FRANK' or Customers.CustomerID = 'FRANR' or Customers.CustomerID = 'FRANS' or Customers.CustomerID = 'FURIB' or Customers.CustomerID = 'GALED' or Customers.CustomerID = 'GODOS' or Customers.CustomerID = 'GOURL' or Customers.CustomerID = 'GREAL' or Customers.CustomerID = 'GROSR' or Customers.CustomerID = 'HANAR' or Customers.CustomerID = 'HILAA' or Customers.CustomerID = 'HUNGC' or Customers.CustomerID = 'HUNGO' or Customers.CustomerID = 'ISLAT' or Customers.CustomerID = 'KOENE' or Customers.CustomerID = 'LACOR' or Customers.CustomerID = 'LAMAI' or Customers.CustomerID = 'LAZYK' or Customers.CustomerID = 'LEHMS' or Customers.CustomerID = 'LETSS' or Customers.CustomerID = 'LILAS' or Customers.CustomerID = 'LINOD' or Customers.CustomerID = 'LONEP' or Customers.CustomerID = 'MAGAA' or Customers.CustomerID = 'MAISD' or Customers.CustomerID = 'MORGK' or Customers.CustomerID = 'NORTS' or Customers.CustomerID = 'OCEAN' or Customers.CustomerID = 'OLDWO' or Customers.CustomerID = 'OTTIK' or Customers.CustomerID = 'PARIS' or Customers.CustomerID = 'PERIC' or Customers.CustomerID = 'PICCO' or Customers.CustomerID = 'PRINI' or Customers.CustomerID = 'QUEDE' or Customers.CustomerID = 'QUEEN' or Customers.CustomerID = 'QUICK' or Customers.CustomerID = 'RANCH' or Customers.CustomerID = 'RATTC' or Customers.CustomerID = 'REGGC' or Customers.CustomerID = 'RICAR' or Customers.CustomerID = 'RICSU' or Customers.CustomerID = 'ROMEY' or Customers.CustomerID = 'SANTG' or Customers.CustomerID = 'SAVEA' or Customers.CustomerID = 'SEVES' or Customers.CustomerID = 'SIMOB' or Customers.CustomerID = 'SPECD' or Customers.CustomerID = 'SPLIR' or Customers.CustomerID = 'SUPRD' or Customers.CustomerID = 'THEBI' or Customers.CustomerID = 'THECR' or Customers.CustomerID = 'TOMSP' or Customers.CustomerID = 'TORTU' or Customers.CustomerID = 'TRADH' or Customers.CustomerID = 'TRAIH' or Customers.CustomerID = 'VAFFE' or Customers.CustomerID = 'VICTE' or Customers.CustomerID = 'VINET' or Customers.CustomerID = 'WANDK' or Customers.CustomerID = 'WARTH' or Customers.CustomerID = 'WELLI' or Customers.CustomerID = 'WHITC' or Customers.CustomerID = 'WILMK' or Customers.CustomerID = 'WOLZA') group by Customers.Country
EH Query  ::  find the number of suppliers in each country
SQL Query ::  select distinct count(distinct Suppliers.SupplierID), Suppliers.Country from Products,Suppliers where Products.SupplierID = Suppliers.SupplierID and Suppliers.SupplierID = Products.SupplierID group by Suppliers.Country
EH Query  ::  Orders placed before 2000-01-01.
SQL Query ::  select distinct Orders.* from Orders where (Orders.OrderDate < '2000-01-01')
EH Query  ::  Show the employees hired between April 2, 1980 and March 3, 1992
SQL Query ::  select distinct Employees.* from Employees where (Employees.HireDate >= '1980-04-2' and Employees.HireDate <= '1992-03-3')
EH Query  ::  Employees with birthdays on February 14
SQL Query ::  select distinct Employees.* from Employees where (month(Employees.BirthDate) = '02' and dayofmonth(Employees.BirthDate) = '14')
EH Query  ::  Employees with birthdays today
SQL Query ::  select distinct Employees.* from Employees where (month(Employees.BirthDate) = '3' and dayofmonth(Employees.BirthDate) = '19')
EH Query  ::  Orders shipped today
SQL Query ::  Error: Noun "shipped" not found in database "eng2sql"</TABLE><p>
EH Query  ::  show the employees who were hired during 1992
SQL Query ::  select distinct Employees.* from Employees where (Employees.HireDate >= '1992-01-01' and Employees.HireDate <= '1992-12-31')
EH Query  ::  orders that were shipped during the month of march 94
SQL Query ::  Error: Noun "shipped" not found in database "eng2sql"</TABLE><p>
EH Query  ::  orders that were shipped during the past seven years
SQL Query ::  Error: Noun "shipped" not found in database "eng2sql"</TABLE><p>
EH Query  ::  the number of Orders shipped in the past 2000 days
SQL Query ::  Error: Noun "shipped" not found in database "eng2sql"</TABLE><p>
EH Query  ::  which products were shipped by United in the past 6 years
SQL Query ::  select distinct Products.* from Products,Orders,Order_Details,Shippers where (Shippers.CompanyName RLIKE 'United.*' or Shippers.CompanyName RLIKE '.*[^A-Z0-9]United.*') and Order_Details.OrderID = Orders.OrderID and Products.ProductID = Order_Details.ProductID and Orders.ShipVia = Shippers.ShipperID and (Orders.ShippedDate >= '2009-03-19' and Orders.ShippedDate <= '2015-3-19')
EH Query  ::  which suppliers have order dates newer than 330 months old
SQL Query ::  select distinct Suppliers.* from Products,Orders,Order_Details,Suppliers where (Orders.OrderDate >= '1987-09-19' and Orders.OrderDate <= '2015-3-19') and Order_Details.OrderID = Orders.OrderID and Products.ProductID = Order_Details.ProductID and Suppliers.SupplierID = Products.SupplierID
EH Query  ::  products more expensive than konbu
SQL Query ::  select distinct Products.* from Products where (Products.UnitPrice > '6.00')
EH Query  ::  products less expensive than vegie-spread
SQL Query ::  select distinct Products.* from Products where (Products.UnitPrice < '43.90')
EH Query  ::  which products cost between $2.50 and $7?
SQL Query ::  select distinct Products.* from Products where (Products.UnitPrice > '2.50' and Products.UnitPrice < '7.00')
EH Query  ::  Shippers who have a phone number
SQL Query ::  select distinct Shippers.* from Shippers where (Shippers.Phone != "")
EH Query  ::  list products where discontinued = true
SQL Query ::  select distinct Products.* from Products where (Products.Discontinued = 'True')
EH Query  ::  list the countries where customers are, arranging the countries in alphabetical order.
SQL Query ::  select distinct Customers.* from Customers order by Customers.Country ASC
EH Query  ::  find the products that have more than 10 units in stock
SQL Query ::  select distinct Products.* from Products where (Products.UnitsInStock > '10')
EH Query  ::  show customers who bought more than 2 products
SQL Query ::  Error: Noun "bought" not found in database "eng2sql"</TABLE><p>
EH Query  ::  show the Suppliers in Japan who had more than 3 orders
SQL Query ::  select distinct Suppliers.* from Suppliers where (Suppliers.Country = 'Japan') and (Suppliers.SupplierID = '29' or Suppliers.SupplierID = '28' or Suppliers.SupplierID = '27' or Suppliers.SupplierID = '26' or Suppliers.SupplierID = '25' or Suppliers.SupplierID = '24' or Suppliers.SupplierID = '23' or Suppliers.SupplierID = '22' or Suppliers.SupplierID = '21' or Suppliers.SupplierID = '20' or Suppliers.SupplierID = '19' or Suppliers.SupplierID = '18' or Suppliers.SupplierID = '17' or Suppliers.SupplierID = '16' or Suppliers.SupplierID = '15' or Suppliers.SupplierID = '14' or Suppliers.SupplierID = '13' or Suppliers.SupplierID = '12' or Suppliers.SupplierID = '11' or Suppliers.SupplierID = '10' or Suppliers.SupplierID = '9' or Suppliers.SupplierID = '8' or Suppliers.SupplierID = '7' or Suppliers.SupplierID = '6' or Suppliers.SupplierID = '5' or Suppliers.SupplierID = '4' or Suppliers.SupplierID = '3' or Suppliers.SupplierID = '2' or Suppliers.SupplierID = '1')
EH Query  ::  List the customers who have a fax number
SQL Query ::  select distinct Customers.* from Customers where (Customers.Fax != "")
EH Query  ::  show the meat/poultry products in reverse price order
SQL Query ::  select distinct Products.* from Products,Categories where (Categories.CategoryName = 'Meat/Poultry') and Products.CategoryID = Categories.CategoryID order by Products.UnitPrice DESC
EH Query  ::  show the ship date and order subtotals since 1995
SQL Query ::  Error: Is Subtotal supposed to be with Order_Subtotals?</TABLE><p>
EH Query  ::  subtotal and customer for orders received after 11/1/92, sorting on the value
SQL Query ::  select distinct Order_Subtotals.*,Customers.CustomerID from Customers,Orders,Order_Subtotals where (Orders.OrderDate > '1992-11-01')    and Orders.CustomerID = Customers.CustomerID and Order_Subtotals.OrderID = Orders.OrderID order by Order_Subtotals.Subtotal ASC
EH Query  ::  List the Order ID, Unit Price, Customer ID, and Quantity for each tofu order
SQL Query ::  select distinct Orders.*, Orders.OrderID,Customers.CustomerID,Order_Details.UnitPrice,Order_Details.Quantity from Customers,Products,Orders,Order_Details where (Products.ProductName = 'Tofu')    and Order_Details.OrderID = Orders.OrderID and Products.ProductID = Order_Details.ProductID and Orders.CustomerID = Customers.CustomerID group by Orders.OrderID
EH Query  ::  list the orders shipped after april of 1996, including the customer and the actual product
SQL Query ::  Error: Noun "shipped" not found in database "eng2sql"</TABLE><p>
EH Query  ::  for the konbu orders, show the subtotal
SQL Query ::  Error: Is Subtotal supposed to be with Order_Subtotals?</TABLE><p>
EH Query  ::  show the ship date and subtotals for all orders since july of 1994
SQL Query ::  select distinct Order_Subtotals.* from Order_Subtotals,Orders where (Orders.OrderDate > '1994-07-01') and Order_Subtotals.OrderID = Orders.OrderID
EH Query  ::  compare the unit price showing product and supplier
SQL Query ::  select distinct Products.*,Suppliers.SupplierID from Products,Suppliers where Products.SupplierID = Suppliers.SupplierID
EH Query  ::  what is the number of products sold by each supplier?
SQL Query ::  select distinct count(distinct Products.ProductID), Suppliers.SupplierID from Products,Suppliers where Products.SupplierID = Suppliers.SupplierID group by Suppliers.SupplierID
EH Query  ::  what is the number of products that come in bottles?
SQL Query ::  select distinct count(distinct Products.ProductID) from Products where (Products.QuantityPerUnit RLIKE 'bottles.*' or Products.QuantityPerUnit RLIKE '.*[^A-Z0-9]bottles.*')
EH Query  ::  customers with more orders than average
SQL Query ::  select distinct Customers.*,Orders.OrderID from Customers,Orders where (Customers.CustomerID = 'WHITC' or Customers.CustomerID = 'WARTH' or Customers.CustomerID = 'WANDK' or Customers.CustomerID = 'VICTE' or Customers.CustomerID = 'VAFFE' or Customers.CustomerID = 'TORTU' or Customers.CustomerID = 'SUPRD' or Customers.CustomerID = 'SAVEA' or Customers.CustomerID = 'RICSU' or Customers.CustomerID = 'RICAR' or Customers.CustomerID = 'REGGC' or Customers.CustomerID = 'RATTC' or Customers.CustomerID = 'QUICK' or Customers.CustomerID = 'QUEEN' or Customers.CustomerID = 'PICCO' or Customers.CustomerID = 'OTTIK' or Customers.CustomerID = 'OLDWO' or Customers.CustomerID = 'MEREP' or Customers.CustomerID = 'MAGAA' or Customers.CustomerID = 'LINOD' or Customers.CustomerID = 'LILAS' or Customers.CustomerID = 'LEHMS' or Customers.CustomerID = 'LAMAI' or Customers.CustomerID = 'KOENE' or Customers.CustomerID = 'ISLAT' or Customers.CustomerID = 'HUNGO' or Customers.CustomerID = 'HILAA' or Customers.CustomerID = 'HANAR' or Customers.CustomerID = 'GREAL' or Customers.CustomerID = 'GODOS' or Customers.CustomerID = 'FRANK' or Customers.CustomerID = 'FOLKO' or Customers.CustomerID = 'ERNSH' or Customers.CustomerID = 'BSBEV' or Customers.CustomerID = 'BOTTM' or Customers.CustomerID = 'BONAP' or Customers.CustomerID = 'BLONP' or Customers.CustomerID = 'BERGS' or Customers.CustomerID = 'AROUT') and Customers.CustomerID = Orders.CustomerID 
